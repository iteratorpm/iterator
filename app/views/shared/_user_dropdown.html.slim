- selected_value = local_assigns[:selected] || record.public_send(column)
- input_name = local_assigns[:form] ? "#{local_assigns[:form].object_name}[#{column}]" : "#{record.model_name.singular}[#{column}]"
- selected_user = options.find { |user| user.id.to_s == selected_value.to_s }

div.relative.flex-grow data-controller="dropdown"
  = hidden_field_tag input_name, selected_value, data: { dropdown_target: "input" }

  / Toggle button
  button.flex.items-center.justify-between.gap-2.w-full.h-10.p-0.text-sm.cursor-pointer data-action="click->dropdown#toggle" data-dropdown-target="button" type="button"
    .flex.items-center.gap-2 data-dropdown-target="selected"
      - if selected_user
        = render "shared/user_dropdown_item", user: selected_user
      - else
        span.text-gray-400 Select a user
    = inline_svg_tag 'icons/chevron-down.svg', class: "w-4 h-4 text-gray-500 ml-auto"

  / Dropdown menu
  .hidden.absolute.z-10.mt-1.w-full.bg-white.shadow-lg.rounded-md.ring-1.ring-black.ring-opacity-5.max-h-60.overflow-auto data-dropdown-target="menu"
    - if local_assigns[:searchable]
      .p-2.border-b
        = text_field_tag :search, nil, placeholder: "Search...", class: "w-full px-2 py-1 text-sm border rounded", data: { dropdown_target: "search", action: "input->dropdown#filter" }

    ul.py-1.text-sm.text-gray-700 role="menu" data-dropdown-target="items"
      - options.each do |user|
        li.relative data-value=user.id data-action="click->dropdown#select" data-dropdown-target="item" role="menuitem" class="#{'bg-gray-100' if user.id == selected_value}"
          a.flex.items-center.w-full.pl-3.pr-2.py-1.5.hover:bg-gray-100.cursor-pointer.leading-6.hover:bg-gray-50
            .dropdown_content
              = render "shared/user_dropdown_item", user: user
