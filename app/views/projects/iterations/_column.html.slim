- iteration_state = local_assigns[:iteration_state] || :backlog
- if local_assigns[:iterations]
  - iterations = local_assigns[:iterations]
- else
  - iterations = Project.find(local_assigns[:project_id]).iterations.where(state: iteration_state).ranked

/ Iterations section
- iterations.each do |iteration|

  = render "projects/iteration", iteration: iteration

  / Done stories section
  - done_stories = iteration.stories.accepted

  - if done_stories.any?
    .border-b.border-gray-300 data-controller="accepted-toggle"
      .px-4.py-2.cursor-pointer.flex.items-center.bg-green-200.hover:bg-green-300.relative data-action="click->accepted-toggle#toggle"
        span.w-full.text-center.font-medium.text-green-800 data-accepted-toggle-target="label"
          = "Show #{done_stories.count} accepted #{'story'.pluralize(done_stories.count)}"

        = inline_svg_tag "icons/arrow-down.svg", class: "w-3 h-3 text-green-600 absolute right-2"

      .hidden.border-t.border-gray-300 data-accepted-toggle-target="content" data-count="#{done_stories.count}"
        - done_stories.each do |story|
          = render 'projects/stories/story', story: story

  = render partial: 'projects/stories/story', collection: iteration.stories.where.not(state: :accepted).ranked, as: :story
